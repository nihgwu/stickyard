{"version":3,"sources":["webpack:///../src/Stickyard.js","webpack:///./src/components/Props.js","webpack:///./src/pages/index.js","webpack:///./src/components/Header.js","webpack:///./src/components/Layout.js"],"names":["styleTransform","style","transform","WebkitTransform","styleTranslateY","offset","Stickyard_Stickyard","Stickyard","props","_this","_React$PureComponent","call","this","setContainerRef","bind","assertThisInitialized_default","setStickyRef","updateState","getStickyOffsets","scrollToIndex","scrollTo","container","stickers","lastStickyIndex","updating","componentDidMount","purgeStickers","addEventListener","componentDidUpdate","componentWillUnmount","removeEventListener","ref","position","willChange","WebkitOverflowScrolling","overflow","n","push","map","x","offsetTop","scrollTop","index","length","_this$container","scrollHeight","offsets","concat","stickyIndex","sticker","offsetHeight","_this$props","stickyClassName","onSticky","lastSticker","classList","add","remove","filter","sort","a","b","render","children","registerContainer","registerSticky","node_modules_react_default","PureComponent","propTypes","prop_types_default","func","isRequired","string","Prop","Object","index_esm","target","Name","Type","Tag","Description","Param","Note","Props","react_default","createElement","R","e","i","I","stickyStyle","Container","Header","Intro","Code","Item","Math","ceil","random","sticky","items","Array","fill","__webpack_exports__","default","Layout","_ref","innerRef","es","_templateObject","_templateObject2","item","key","Nav","Title","Link","components_Header","href","c","injectGlobal","Body","Fragment","Helmet_default","title","meta","name","content"],"mappings":"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","file":"component---src-pages-index-js-c5c6ee18fcdce5eef36e.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst styleTransform = (style, transform) => {\n  style.transform = transform\n  style.WebkitTransform = transform\n}\n\nconst styleTranslateY = (style, offset) => {\n  styleTransform(style, `translateY(${offset}px`)\n}\n\n/**\n * Stickyard, make your component sticky the easy way using render prop\n */\nexport default class Stickyard extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.setContainerRef = this.setContainerRef.bind(this)\n    this.setStickyRef = this.setStickyRef.bind(this)\n    this.updateState = this.updateState.bind(this)\n    this.getStickyOffsets = this.getStickyOffsets.bind(this)\n    this.scrollToIndex = this.scrollToIndex.bind(this)\n    this.scrollTo = this.scrollTo.bind(this)\n\n    this.container = null\n    this.stickers = []\n    this.lastStickyIndex = -1\n    this.updating = false\n  }\n\n  componentDidMount() {\n    this.purgeStickers()\n    if (this.container) {\n      this.container.addEventListener('scroll', this.updateState)\n    }\n  }\n\n  componentDidUpdate() {\n    this.purgeStickers()\n  }\n\n  componentWillUnmount() {\n    if (this.container) {\n      this.container.removeEventListener('scroll', this.updateState)\n    }\n  }\n\n  setContainerRef(ref) {\n    this.container = ref\n    if (ref) {\n      ref.style.position = 'relative'\n      ref.style.willChange = 'transform'\n      ref.style.WebkitOverflowScrolling = 'touch'\n      ref.style.overflow = 'auto'\n    }\n  }\n\n  setStickyRef(ref) {\n    if (ref) this.stickers.push(ref)\n  }\n\n  getStickyOffsets() {\n    return this.stickers.map(x => x.offsetTop)\n  }\n\n  scrollTo(offset) {\n    if (this.container) {\n      this.container.scrollTop = offset\n    }\n  }\n\n  scrollToIndex(index) {\n    if (index >= 0 && index < this.getStickyOffsets().length) {\n      this.scrollTo(this.getStickyOffsets()[index])\n    }\n  }\n\n  updateState() {\n    if (this.updating || !this.container || this.stickers.length === 0) return\n\n    this.updating = true\n\n    const { scrollTop, scrollHeight } = this.container\n    const offsets = this.getStickyOffsets().concat(scrollHeight)\n\n    let stickyIndex = 0\n    while (scrollTop >= offsets[stickyIndex]) stickyIndex += 1\n    stickyIndex -= 1\n\n    const sticker = stickyIndex >= 0 ? this.stickers[stickyIndex] : null\n\n    if (sticker) {\n      if (scrollTop < offsets[stickyIndex + 1] - sticker.offsetHeight) {\n        styleTranslateY(sticker.style, scrollTop - sticker.offsetTop)\n      } else {\n        styleTranslateY(\n          sticker.style,\n          offsets[stickyIndex + 1] - offsets[stickyIndex] - sticker.offsetHeight\n        )\n      }\n    }\n\n    const { stickyClassName, onSticky } = this.props\n    if (stickyIndex !== this.lastStickyIndex) {\n      const lastSticker =\n        this.lastStickyIndex >= 0 ? this.stickers[this.lastStickyIndex] : null\n\n      if (lastSticker) styleTransform(lastSticker.style, '')\n\n      if (stickyClassName) {\n        sticker && sticker.classList && sticker.classList.add(stickyClassName)\n        lastSticker &&\n          lastSticker.classList &&\n          lastSticker.classList.remove(stickyClassName)\n      }\n\n      onSticky && onSticky(stickyIndex)\n      this.lastStickyIndex = stickyIndex\n    }\n\n    this.updating = false\n  }\n\n  purgeStickers() {\n    this.stickers = this.stickers\n      .filter(x => x && x.offsetHeight)\n      .sort((a, b) => a.offsetTop - b.offsetTop)\n\n    this.updateState()\n  }\n\n  render() {\n    const { children } = this.props\n    return children({\n      registerContainer: this.setContainerRef,\n      registerSticky: this.setStickyRef,\n      updateState: this.updateState,\n      getStickyOffsets: this.getStickyOffsets,\n      scrollToIndex: this.scrollToIndex,\n      scrollTo: this.scrollTo,\n    })\n  }\n}\n\nStickyard.propTypes = {\n  /**\n   * Render whatever you want, it's called with an object\n   */\n  children: PropTypes.func.isRequired,\n  /**\n   * The className to be attached to the element when it's sticky.\n   */\n  stickyClassName: PropTypes.string,\n  /**\n   * It's called when a element becomes sticky, `-1` means there is no sticky element.\n   */\n  onSticky: PropTypes.func,\n}\n","import React from 'react'\nimport styled from 'react-emotion'\n\nconst Prop = styled.div`\n  margin: 20px;\n`\n\nconst Name = styled.div`\n  font-weight: 500;\n`\n\nconst Type = styled.span`\n  background-color: #ccc;\n  margin: 0 10px;\n  padding: 1px 5px;\n  border-radius: 2px;\n  color: #333;\n  font-size: 13px;\n`\n\nconst Tag = styled.span`\n  background-color: #333;\n  padding: 1px 5px;\n  border-radius: 2px;\n  color: #fff;\n  font-size: 13px;\n`\n\nconst Description = styled.div`\n  margin: 10px;\n  font-size: 14px;\n`\n\nconst Param = styled.div`\n  margin: 10px 0;\n  font-size: 14px;\n`\n\nconst Note = styled.div`\n  background-color: #ddd;\n  padding: 10px;\n  border-radius: 2px;\n  color: #333;\n  font-size: 14px;\n\n  ${Tag} {\n    background-color: #888;\n  }\n`\n\nexport default () => (\n  <div>\n    <Prop>\n      <Name>\n        children\n        <Type>{'function({})'}</Type>\n        <Tag>required</Tag>\n      </Name>\n      <Description>\n        Render whatever you want, it's called with an object with the following\n        properties:\n      </Description>\n      <Param>\n        <Type>registerContainer(ref)</Type>\n        pass to the container's <Tag>ref</Tag> prop\n      </Param>\n      <Param>\n        <Type>registerSticky(ref)</Type>\n        pass to the <Tag>ref</Tag> prop of whatever node within the container if\n        you want to make it sticky\n      </Param>\n      <Param>\n        <Type>updateState()</Type>\n        update the sticky state manually, this useful if your content is\n        resizable\n      </Param>\n      <Param>\n        <Type>getStickyOffsets()</Type>\n        return all the sticky-able elements' offsets\n      </Param>\n      <Param>\n        <Type>scrollToIndex(index)</Type>\n        scroll to the specific sticky element by index\n      </Param>\n      <Param>\n        <Type>scrollTo(offset)</Type>\n        scroll to the specific offset\n      </Param>\n      <Note>\n        The ref-register must be passed to the real DOM node, so if the\n        component is a wrapper uppon DOM node, you need to register it to the\n        underlying DOM node, using <Tag>innerRef</Tag> or something like that if\n        provided.\n      </Note>\n    </Prop>\n    <Prop>\n      <Name>\n        stickyClassName\n        <Type>string</Type>\n      </Name>\n      <Description>\n        The className to be attached to the element when it's sticky\n      </Description>\n      <Note>\n        This feature relies on <Tag>classList</Tag> which is not supported below\n        IE10, so it won't take any effect on IE9 or below, you can use{' '}\n        <Tag>onSticky</Tag> to implement by yourself.\n      </Note>\n    </Prop>\n    <Prop>\n      <Name>\n        onSticky\n        <Type>function(index)</Type>\n      </Name>\n      <Description>\n        It's called when an element becomes sticky, <Tag>-1</Tag> means there is\n        no sticky element\n      </Description>\n    </Prop>\n  </div>\n)\n","import React from 'react'\nimport styled, { css } from 'react-emotion'\nimport Stickyard from 'stickyard'\nimport { source } from 'common-tags'\n\nimport Layout from '../components/Layout'\nimport Props from '../components/Props'\n\nconst stickyStyle = css`\n  box-shadow: 0 1px 4px #888;\n`\n\nconst Container = styled.div`\n  height: calc(100vh - 100px);\n`\n\nconst Header = styled.div`\n  height: 50px;\n  background-color: #ccc;\n  display: flex;\n  align-items: center;\n  padding: 0 20px;\n  font-weight: 500;\n  font-size: 18px;\n`\n\nconst Intro = styled.div`\n  height: 200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  font-weight: 500;\n  font-size: 20px;\n`\n\nconst Code = styled.pre`\n  background-color: #333;\n  margin: 0;\n  padding: 20px;\n  color: #eee;\n  font-size: 14px;\n  overflow-x: auto;\n`\n\nconst Item = styled.div`\n  height: ${props => Math.ceil(Math.random() * 50) + 30}px;\n  background-color: ${props => (props.sticky ? '#ccc' : '#fff')};\n  display: flex;\n  align-items: center;\n  padding: 0 20px;\n`\n\nconst items = new Array(100).fill(0).map((x, i) => `Item ${i}`)\n\nconst Home = () => (\n  <Layout>\n    <Stickyard stickyClassName={stickyStyle}>\n      {({ registerContainer, registerSticky }) => (\n        <Container innerRef={registerContainer}>\n          <Intro>\n            Make your React component sticky the easy way using render prop\n          </Intro>\n          <Header innerRef={registerSticky}>Install</Header>\n          <Code>\n            {source`\n              # Yarn\n              yarn add stickyard\n\n              # NPM\n              npm install --save stickyard\n            `}\n          </Code>\n          <Header innerRef={registerSticky}>API</Header>\n          <Props />\n          <Header innerRef={registerSticky}>Usage</Header>\n          <Code>\n            {source`\n              import Stickyard from 'stickyard'\n\n              // pseudo code\n              <Stickyard>\n                {({ registerContainer, registerSticky }) => (\n                  <div ref={registerContainer}>\n                    {items.map((item, index) => (\n                      <div key={item.key} ref={item.sticky ? registerSticky : null}>\n                        {item.label}\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </Stickyard>\n            `}\n          </Code>\n          <Header innerRef={registerSticky}>Demo</Header>\n          {items.map((item, index) => {\n            const sticky = index !== 0 && index % 5 === 0\n            return (\n              <Item\n                key={index}\n                sticky={sticky}\n                innerRef={sticky ? registerSticky : null}\n              >\n                {item}\n              </Item>\n            )\n          })}\n        </Container>\n      )}\n    </Stickyard>\n  </Layout>\n)\n\nexport default Home\n","import React from 'react'\nimport styled from 'react-emotion'\n\nconst Container = styled.header`\n  background-color: #333;\n  color: #fff;\n  height: 60px;\n  box-shadow: 0 1px 4px #000;\n`\n\nconst Nav = styled.nav`\n  max-width: 900px;\n  height: 100%;\n  margin: auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst Title = styled.div`\n  font-size: 24px;\n`\n\nconst Link = styled.a`\n  color: #fff;\n  text-decoration: none;\n\n  &:hover {\n    color: #eee;\n  }\n`\n\nconst Header = () => (\n  <Container>\n    <Nav>\n      <Title>\n        <Link href=\"/\">Stickyard</Link>\n      </Title>\n      <Link href=\"https://github.com/nihgwu/stickyard\">Github</Link>\n    </Nav>\n  </Container>\n)\n\nexport default Header\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport styled, { injectGlobal } from 'react-emotion'\n\nimport Header from './Header'\n\ninjectGlobal`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: sans-serif;\n    font-size: 16px;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n`\n\nconst Body = styled.div`\n  margin: 20px auto;\n  max-width: 900px;\n  background-color: #f5f5f5;\n  box-shadow: 1px 1px 4px #ccc, -1px -1px 4px #ccc;\n`\n\nconst Layout = ({ children }) => (\n  <React.Fragment>\n    <Helmet\n      title=\"Stickyard\"\n      meta={[\n        {\n          name: 'description',\n          content: 'Make your React component sticky the easy way',\n        },\n        {\n          name: 'keywords',\n          content: 'react, component, sticky, stickyard, render-prop',\n        },\n      ]}\n    />\n    <Header />\n    <Body>{children}</Body>\n  </React.Fragment>\n)\n\nexport default Layout\n"],"sourceRoot":""}