{"version":3,"sources":["webpack:///../src/Stickyard.js","webpack:///./src/components/Props.js","webpack:///./src/pages/index.js","webpack:///./src/components/Header.js","webpack:///./src/components/Layout.js"],"names":["styleTransform","style","transform","WebkitTransform","MSTransform","styleTranslateY","offset","Stickyard","props","_this","_React$PureComponent","call","this","setContainerRef","bind","assertThisInitialized_default","setStickyRef","updateState","getStickyOffset","getStickyOffsets","scrollToIndex","scrollTo","container","stickers","lastStickyIndex","updating","componentDidMount","purgeStickers","addEventListener","componentDidUpdate","componentWillUnmount","removeEventListener","ref","position","overflowY","willChange","WebkitOverflowScrolling","push","sticker","offsetTop","offsetParent","map","scrollTop","index","length","_this$container","scrollHeight","offsets","concat","stickyIndex","offsetHeight","_this$props","stickyClassName","onSticky","lastSticker","classList","add","remove","_this2","filter","sort","a","b","render","children","registerContainer","registerSticky","React","PureComponent","propTypes","PropTypes","func","isRequired","string","Prop","styled","target","Name","Type","Tag","Description","Param","Note","Props","react_default","createElement","stickyStyle","css","Container","Header","Intro","Code","Item","Math","ceil","random","sticky","items","Array","fill","x","i","Home","Layout","Stickyard_Stickyard","_ref","innerRef","source","_templateObject","_templateObject2","item","key","Nav","Title","Link","href","injectGlobal","Body","Fragment","Helmet_default","title","meta","name","content","components_Header"],"mappings":"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","file":"component---src-pages-index-js-a763844a6e3331fbc74f.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst styleTransform = (style, transform) => {\n  style.transform = transform\n  style.WebkitTransform = transform\n  style.MSTransform = transform\n}\n\nconst styleTranslateY = (style, offset) => {\n  styleTransform(style, `translateY(${offset}px) translateZ(0)`)\n}\n\n/**\n * Stickyard, make your component sticky the easy way using render prop\n */\nexport default class Stickyard extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.setContainerRef = this.setContainerRef.bind(this)\n    this.setStickyRef = this.setStickyRef.bind(this)\n    this.updateState = this.updateState.bind(this)\n    this.getStickyOffset = this.getStickyOffset.bind(this)\n    this.getStickyOffsets = this.getStickyOffsets.bind(this)\n    this.scrollToIndex = this.scrollToIndex.bind(this)\n    this.scrollTo = this.scrollTo.bind(this)\n\n    this.container = null\n    this.stickers = []\n    this.lastStickyIndex = -1\n    this.updating = false\n  }\n\n  componentDidMount() {\n    this.purgeStickers()\n    if (this.container) {\n      this.container.addEventListener('scroll', this.updateState)\n    }\n  }\n\n  componentDidUpdate() {\n    this.purgeStickers()\n  }\n\n  componentWillUnmount() {\n    if (this.container) {\n      this.container.removeEventListener('scroll', this.updateState)\n    }\n  }\n\n  setContainerRef(ref) {\n    this.container = ref\n    if (ref) {\n      // the postion should be either `relative` or `absolute`\n      if (ref.style.position !== 'absolute') {\n        ref.style.position = 'relative'\n      }\n      ref.style.overflowY = 'auto'\n      ref.style.willChange = 'transform'\n      ref.style.WebkitOverflowScrolling = 'touch'\n    }\n  }\n\n  setStickyRef(ref) {\n    if (ref) this.stickers.push(ref)\n  }\n\n  getStickyOffset(sticker) {\n    let { offsetTop, offsetParent } = sticker\n    while (this.container && offsetParent !== this.container) {\n      offsetTop += offsetParent.offsetTop\n      // eslint-disable-next-line prefer-destructuring\n      offsetParent = offsetParent.offsetParent\n    }\n    return offsetTop\n  }\n\n  getStickyOffsets() {\n    return this.stickers.map(this.getStickyOffset)\n  }\n\n  scrollTo(offset) {\n    if (this.container) {\n      this.container.scrollTop = offset\n    }\n  }\n\n  scrollToIndex(index) {\n    if (index >= 0 && index < this.getStickyOffsets().length) {\n      this.scrollTo(this.getStickyOffsets()[index])\n    }\n  }\n\n  updateState() {\n    if (this.updating || !this.container || this.stickers.length === 0) return\n\n    this.updating = true\n\n    const { scrollTop, scrollHeight } = this.container\n    const offsets = this.getStickyOffsets().concat(scrollHeight)\n\n    let stickyIndex = 0\n    while (scrollTop >= offsets[stickyIndex]) stickyIndex += 1\n    stickyIndex -= 1\n\n    const sticker = stickyIndex >= 0 ? this.stickers[stickyIndex] : null\n\n    if (sticker) {\n      if (scrollTop < offsets[stickyIndex + 1] - sticker.offsetHeight) {\n        styleTranslateY(sticker.style, scrollTop - offsets[stickyIndex])\n      } else {\n        styleTranslateY(\n          sticker.style,\n          offsets[stickyIndex + 1] - offsets[stickyIndex] - sticker.offsetHeight\n        )\n      }\n    }\n\n    const { stickyClassName, onSticky } = this.props\n    if (stickyIndex !== this.lastStickyIndex) {\n      const lastSticker =\n        this.lastStickyIndex >= 0 ? this.stickers[this.lastStickyIndex] : null\n\n      if (lastSticker) styleTransform(lastSticker.style, '')\n\n      if (stickyClassName) {\n        sticker && sticker.classList && sticker.classList.add(stickyClassName)\n        lastSticker &&\n          lastSticker.classList &&\n          lastSticker.classList.remove(stickyClassName)\n      }\n\n      onSticky && onSticky(stickyIndex)\n      this.lastStickyIndex = stickyIndex\n    }\n\n    this.updating = false\n  }\n\n  purgeStickers() {\n    this.stickers = this.stickers\n      .filter(sticker => sticker && sticker.offsetHeight)\n      .sort((a, b) => this.getStickyOffset(a) - this.getStickyOffset(b))\n\n    this.updateState()\n  }\n\n  render() {\n    const { children } = this.props\n    return children({\n      registerContainer: this.setContainerRef,\n      registerSticky: this.setStickyRef,\n      updateState: this.updateState,\n      getStickyOffsets: this.getStickyOffsets,\n      scrollToIndex: this.scrollToIndex,\n      scrollTo: this.scrollTo,\n    })\n  }\n}\n\nStickyard.propTypes = {\n  /**\n   * Render whatever you want, it's called with an object\n   */\n  children: PropTypes.func.isRequired,\n  /**\n   * The className to be attached to the element when it's sticky.\n   */\n  stickyClassName: PropTypes.string,\n  /**\n   * It's called when a element becomes sticky, `-1` means there is no sticky element.\n   */\n  onSticky: PropTypes.func,\n}\n","import React from 'react'\nimport styled from 'react-emotion'\n\nconst Prop = styled.div`\n  margin: 20px;\n`\n\nconst Name = styled.div`\n  font-weight: 500;\n`\n\nconst Type = styled.span`\n  background-color: #ccc;\n  margin: 0 10px;\n  padding: 1px 5px;\n  border-radius: 2px;\n  color: #333;\n  font-size: 13px;\n`\n\nconst Tag = styled.span`\n  background-color: #333;\n  padding: 1px 5px;\n  border-radius: 2px;\n  color: #fff;\n  font-size: 13px;\n`\n\nconst Description = styled.div`\n  margin: 10px;\n  font-size: 14px;\n`\n\nconst Param = styled.div`\n  margin: 10px 0;\n  font-size: 14px;\n`\n\nconst Note = styled.div`\n  background-color: #ddd;\n  padding: 10px;\n  border-radius: 2px;\n  color: #333;\n  font-size: 14px;\n\n  ${Tag} {\n    background-color: #888;\n  }\n`\n\nexport default () => (\n  <div>\n    <Prop>\n      <Name>\n        children\n        <Type>{'function({})'}</Type>\n        <Tag>required</Tag>\n      </Name>\n      <Description>\n        Render whatever you want, it's called with an object with the following\n        properties:\n      </Description>\n      <Param>\n        <Type>registerContainer(ref)</Type>\n        pass to the container's <Tag>ref</Tag> prop\n      </Param>\n      <Param>\n        <Type>registerSticky(ref)</Type>\n        pass to the <Tag>ref</Tag> prop of whatever node within the container if\n        you want to make it sticky\n      </Param>\n      <Param>\n        <Type>updateState()</Type>\n        update the sticky state manually, this useful if your content is\n        resizable\n      </Param>\n      <Param>\n        <Type>getStickyOffsets()</Type>\n        return all the sticky-able elements' offsets\n      </Param>\n      <Param>\n        <Type>scrollToIndex(index)</Type>\n        scroll to the specific sticky element by index\n      </Param>\n      <Param>\n        <Type>scrollTo(offset)</Type>\n        scroll to the specific offset\n      </Param>\n      <Note>\n        The ref-register must be passed to the real DOM node, so if the\n        component is a wrapper uppon DOM node, you need to register it to the\n        underlying DOM node, using <Tag>innerRef</Tag> or something like that if\n        provided.\n      </Note>\n    </Prop>\n    <Prop>\n      <Name>\n        stickyClassName\n        <Type>string</Type>\n      </Name>\n      <Description>\n        The className to be attached to the element when it's sticky\n      </Description>\n      <Note>\n        This feature relies on <Tag>classList</Tag> which is not supported below\n        IE10, so it won't take any effect on IE9 or below, you can use{' '}\n        <Tag>onSticky</Tag> to implement by yourself.\n      </Note>\n    </Prop>\n    <Prop>\n      <Name>\n        onSticky\n        <Type>function(index)</Type>\n      </Name>\n      <Description>\n        It's called when an element becomes sticky, <Tag>-1</Tag> means there is\n        no sticky element\n      </Description>\n    </Prop>\n  </div>\n)\n","import React from 'react'\nimport styled, { css } from 'react-emotion'\nimport Stickyard from 'stickyard'\nimport { source } from 'common-tags'\n\nimport Layout from '../components/Layout'\nimport Props from '../components/Props'\n\nconst stickyStyle = css`\n  box-shadow: 0 1px 4px #888;\n`\n\nconst Container = styled.div`\n  height: calc(100vh - 100px);\n`\n\nconst Header = styled.div`\n  height: 50px;\n  background-color: #ccc;\n  display: flex;\n  align-items: center;\n  padding: 0 20px;\n  font-weight: 500;\n  font-size: 18px;\n`\n\nconst Intro = styled.div`\n  height: 200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  font-weight: 500;\n  font-size: 20px;\n`\n\nconst Code = styled.pre`\n  background-color: #333;\n  margin: 0;\n  padding: 20px;\n  color: #eee;\n  font-size: 14px;\n  overflow-x: auto;\n`\n\nconst Item = styled.div`\n  height: ${props => Math.ceil(Math.random() * 50) + 30}px;\n  background-color: ${props => (props.sticky ? '#ccc' : '#fff')};\n  display: flex;\n  align-items: center;\n  padding: 0 20px;\n`\n\nconst items = new Array(100).fill(0).map((x, i) => `Item ${i}`)\n\nconst Home = () => (\n  <Layout>\n    <Stickyard stickyClassName={stickyStyle}>\n      {({ registerContainer, registerSticky }) => (\n        <Container innerRef={registerContainer}>\n          <Intro>\n            Make your React component sticky the easy way using render prop\n          </Intro>\n          <Header innerRef={registerSticky}>Install</Header>\n          <Code>\n            {source`\n              # Yarn\n              yarn add stickyard\n\n              # NPM\n              npm install --save stickyard\n            `}\n          </Code>\n          <Header innerRef={registerSticky}>API</Header>\n          <Props />\n          <Header innerRef={registerSticky}>Usage</Header>\n          <Code>\n            {source`\n              import Stickyard from 'stickyard'\n\n              // pseudo code\n              <Stickyard>\n                {({ registerContainer, registerSticky }) => (\n                  <div ref={registerContainer}>\n                    {items.map((item, index) => (\n                      <div key={item.key} ref={item.sticky ? registerSticky : null}>\n                        {item.label}\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </Stickyard>\n            `}\n          </Code>\n          <div style={{ position: 'relative' }}>\n            <Header innerRef={registerSticky}>Demo</Header>\n            {items.map((item, index) => {\n              const sticky = index !== 0 && index % 5 === 0\n              return (\n                <Item\n                  key={index}\n                  sticky={sticky}\n                  innerRef={sticky ? registerSticky : null}\n                >\n                  {item}\n                </Item>\n              )\n            })}\n          </div>\n        </Container>\n      )}\n    </Stickyard>\n  </Layout>\n)\n\nexport default Home\n","import React from 'react'\nimport styled from 'react-emotion'\n\nconst Container = styled.header`\n  background-color: #333;\n  color: #fff;\n  height: 60px;\n  box-shadow: 0 1px 4px #000;\n`\n\nconst Nav = styled.nav`\n  max-width: 900px;\n  height: 100%;\n  margin: auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst Title = styled.div`\n  font-size: 24px;\n`\n\nconst Link = styled.a`\n  color: #fff;\n  text-decoration: none;\n\n  &:hover {\n    color: #eee;\n  }\n`\n\nconst Header = () => (\n  <Container>\n    <Nav>\n      <Title>\n        <Link href=\"https://nihgwu.github.io/stickyard/\">Stickyard</Link>\n      </Title>\n      <Link href=\"https://github.com/nihgwu/stickyard\">Github</Link>\n    </Nav>\n  </Container>\n)\n\nexport default Header\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport styled, { injectGlobal } from 'react-emotion'\n\nimport Header from './Header'\n\ninjectGlobal`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: sans-serif;\n    font-size: 16px;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n`\n\nconst Body = styled.div`\n  margin: 20px auto;\n  max-width: 900px;\n  background-color: #f5f5f5;\n  box-shadow: 1px 1px 4px #ccc, -1px -1px 4px #ccc;\n`\n\nconst Layout = ({ children }) => (\n  <React.Fragment>\n    <Helmet\n      title=\"Stickyard\"\n      meta={[\n        {\n          name: 'description',\n          content: 'Make your React component sticky the easy way',\n        },\n        {\n          name: 'keywords',\n          content: 'react, component, sticky, stickyard, render-prop',\n        },\n      ]}\n    />\n    <Header />\n    <Body>{children}</Body>\n  </React.Fragment>\n)\n\nexport default Layout\n"],"sourceRoot":""}